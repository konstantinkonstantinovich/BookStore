version: "3.9"

services:
  db:
    container_name: db
    image: postgres
    restart: on-failure
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - webnet
    expose:
      - 5432
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'apple'
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    networks:
      - webnet
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 12345
    ports:
      - "5050:80"

  storage: &Storage
    container_name: Storage
    build:
      target: development_build
      args:
        DJANGO_ENV: 'dev'
    volumes:
      - ./storage:/code
      - ./config:/config
    environment:
      DJANGO_DEBUG: 1
      DATABASE_HOST: 'db'
    depends_on:
      - db
    command: sh /runserver.sh


  shop: &Shop
    container_name: Shop
    build:
      target: development_build
      args:
        DJANGO_ENV: 'dev'
    volumes:
      - ./shop:/code
      - ./config:/config
    environment:
      DJANGO_DEBUG: 1
      DATABASE_HOST: 'db'
    depends_on:
      - db
    command: sh /runserver.sh

  celery:
    <<: *Shop
    container_name: celery
    environment:
      C_FORCE_ROOT: 'true'
      DATABASE_URL: 'postgresql://postgres:apple@db:5432/db_store'
      DATABASE_HOST: 'db'
      DATABASE_PORT: '5432'
      REDIS_URL: 'redis://redis:6379/0'
      REDIS_CACHE: 'redis:6379'
      AMQP_URL: 'amqp://rabbitmq:5672'
      CHECK_WEB: 'true'
      WEB_HOST: 'shop'
      WEB_PORT: '8001'
    depends_on:
      - redis
      - db
    command: celery -A store worker -B -l INFO


  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:latest
    command: [ "-smtp-bind-addr", "0.0.0.0:25" ]
    user: root
    restart: on-failure
    networks:
      - webnet
      - nginx_network
    expose:
      - 25
      - 8025
    healthcheck:
      test: [ "CMD", "echo", "|", "telnet", "127.0.0.1 25" ]
      interval: 10s
      timeout: 5s
      retries: 5


  nginx:
    container_name: nginx
    build:
      target: development_build
    ports:
      - 8025:8025
      - 5555:5555
    depends_on:
      - mailhog


volumes:
  db-data:
